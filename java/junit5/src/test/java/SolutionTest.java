import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

class SolutionTest {

    @Test
    void testNumIslands() {

        final char[][] grid = new char[][]{
                {'1','1','1','1','0'},
                {'1','1','0','1','0'},
                {'1','1','0','0','0'},
                {'0','0','0','0','0'}
        };

        final Solution solution = new Solution();

        final int numberOfIslands = solution.numIslands(grid);

        assertEquals(1, numberOfIslands);

    }

    @Test
    void testNumIslands2() {

        final char[][] grid = new char[][]{
             {'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'}
            ,{'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'}
            ,{'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'}
            ,{'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'}
            ,{'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
            ,{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
        };

        final Solution solution = new Solution();

        final int numberOfIslands = solution.numIslands(grid);

        assertEquals(1, numberOfIslands);

    }

    @Test
    void testScratchpad() {
        final char[][] grid = new char[][]{
                {'1','1','1','1','0'},
                {'1','1','0','1','0'},
                {'1','1','0','0','0'},
                {'0','0','0','0','0'}
        };

        if (grid[0][1] == '1') {
            System.out.println("Works");
        } else {
            System.out.println("Doesn't work");
        }

        if (grid[3][1] != '1') {
            System.out.println("Works again");
        }
    }

}
